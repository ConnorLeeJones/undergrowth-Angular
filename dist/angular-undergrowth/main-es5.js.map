{"version":3,"sources":["/./$_lazy_route_resource lazy namespace object","/./src/app/app.component.html","/./src/app/edit-profile/edit-profile.component.html","/./src/app/homescreen/homescreen.component.html","/./src/app/search-results/search-results.component.html","/./src/app/searcher/searcher.component.html","/./src/app/sign-up/sign-up.component.html","/./src/app/type-selector/type-selector.component.html","/./src/app/user-login/user-login.component.html","/./src/app/user-profile/user-profile.component.html","/./src/app/app-routing.module.ts","/./src/app/app.component.css","/./src/app/app.component.ts","/./src/app/app.module.ts","/./src/app/edit-profile/edit-profile.component.css","/./src/app/edit-profile/edit-profile.component.ts","/./src/app/homescreen/homescreen.component.css","/./src/app/homescreen/homescreen.component.ts","/./src/app/models/search-criteria.ts","/./src/app/models/user-profile.ts","/./src/app/models/user.ts","/./src/app/search-results/search-results.component.css","/./src/app/search-results/search-results.component.ts","/./src/app/searcher/searcher.component.css","/./src/app/searcher/searcher.component.ts","/./src/app/services/login.service.ts","/./src/app/services/profile.service.ts","/./src/app/services/user-service.service.ts","/./src/app/sign-up/sign-up.component.css","/./src/app/sign-up/sign-up.component.ts","/./src/app/type-selector/type-selector.component.css","/./src/app/type-selector/type-selector.component.ts","/./src/app/user-login/user-login.component.css","/./src/app/user-login/user-login.component.ts","/./src/app/user-profile/user-profile.component.css","/./src/app/user-profile/user-profile.component.ts","/./src/environments/environment.ts","/./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"card text-white bg-dark\\\">\\n  <div class=\\\"card-header\\\">\\n    <ul class=\\\"nav nav-tabs card-header-tabs text-white bg-gray\\\">\\n      <h4 id=\\\"navHeader\\\"><b><em> {{ title }}</em></b> </h4>\\n\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"/home\\\">home</a>\\n      </li>\\n\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"currentUser; else notLoggedIn\\\">\\n        <a class=\\\"nav-link\\\" (click)=\\\"logOut()\\\" href=\\\"/login\\\">log out</a>\\n      </li>\\n\\n      <ng-template #notLoggedIn>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"/login\\\">login</a>\\n        </li>\\n      </ng-template>\\n\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"currentUser\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"/profiles/{{currentUser.id}}\\\">profile</a>\\n      </li>\\n\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"currentUser\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"/search\\\">search</a>\\n      </li>\\n\\n    </ul>\\n\\n  </div>\\n</div>\\n\\n\\n\\n<router-outlet></router-outlet>\"","module.exports = \"<div class=\\\"background2\\\">\\n    <div class=\\\"card w-75 mx-auto my-5 bg-dark text-white\\\">\\n        <div class=\\\"container\\\">\\n            <h1>Edit Profile</h1>\\n            <form (ngSubmit)=\\\"onSubmit()\\\" #userForm=\\\"ngForm\\\">\\n\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"description\\\">Description</label>\\n                    <input [(ngModel)]=\\\"profile.description\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"description\\\"\\n                        name=\\\"description\\\" placeholder=\\\"Description\\\">\\n                </div>\\n\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"links\\\">Links</label>\\n                    <input [(ngModel)]=\\\"profile.links\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"links\\\" name=\\\"links\\\"\\n                        placeholder=\\\"Links\\\">\\n                </div>\\n\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"email\\\">Email Address</label>\\n                    <input [(ngModel)]=\\\"profile.email\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"email\\\" name=\\\"email\\\"\\n                        placeholder=\\\"Email Address\\\">\\n                </div>\\n\\n\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"zipcode\\\">Zipcode</label>\\n                    <input [(ngModel)]=\\\"profile.zipcode\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"zipcode\\\" name=\\\"zipcode\\\"\\n                        placeholder=\\\"Zipcode\\\">\\n                </div>\\n\\n                <div class=\\\"form-group w-25\\\">\\n                    <label for=\\\"type\\\">Profile Type</label>\\n                    <select [(ngModel)]=\\\"profile.type\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"type\\\" name=\\\"type\\\">\\n                        <option *ngFor=\\\"let type of this.headers\\\">{{type.name}} </option>\\n                    </select>\\n                </div>\\n\\n                <button type=\\\"submit\\\" [disabled]=\\\"!userForm.form.valid\\\" class=\\\"btn btn-success\\\">Update Profile</button>\\n            </form>\\n        </div>\\n    </div>\\n</div>\"","module.exports = \"<div class=\\\"background\\\">\\n    <div class=\\\"card text-white bg-dark w-50 mx-auto my-5\\\">\\n        <div class=\\\"container\\\">\\n            <div class=\\\"form-group\\\">\\n                <div class=\\\"hometext\\\"> {{ welcomeMessage }}</div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <div class=\\\"hometext\\\"> {{ missionStatement }}</div>\\n            </div>\\n\\n            <div>\\n                <h6 class=\\\"caption my-5\\\"> All background artwork provided by\\n                    <a target=\\\"_blank\\\" rel=\\\"noopener\\\" id=\\\"keith\\\" href=\\\"https://www.instagram.com/starfur12/?hl=en\\\">Keith\\n                        Yong</a>.\\n                </h6>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"","module.exports = \"<div *ngIf=\\\"results\\\">\\n    <div class=\\\"card w-50 mx-auto bg-dark text-white my-5\\\">\\n        <div class=\\\"container\\\">\\n            <div class=\\\"card-body\\\">\\n                <div class=\\\"table-wrapper-scroll-y my-custom-scrollbar\\\">\\n                    <table class=\\\"table table-bordered table-striped\\\">\\n                        <thead class=\\\"thead-dark\\\">\\n                            <th>Name</th>\\n                            <th>Index</th>\\n                        </thead>\\n                        <tbody>\\n                            <tr *ngFor=\\\"let result of results\\\">\\n                                <td>{{result.userFullName}}</td>\\n                            </tr>\\n                        </tbody>\\n                    </table>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","module.exports = \"<div class=\\\"background2\\\">\\n    <div class=\\\"card w-25 mx-auto my-5 bg-dark text-white\\\">\\n        <div class=\\\"container\\\">\\n            <h1>Search:</h1>\\n            <form (ngSubmit)=\\\"onSubmit()\\\" #userForm=\\\"ngForm\\\">\\n\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"type\\\">Profile Type:</label>\\n                    <select [(ngModel)]=\\\"searchCriteria.profileType\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"type\\\"\\n                        name=\\\"type\\\">\\n                        <option *ngFor=\\\"let type of this.headers\\\">{{type.name}} </option>\\n                    </select>\\n                </div>\\n\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"type\\\">Distance:</label>\\n                    <select [(ngModel)]=\\\"searchCriteria.distance\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"type\\\"\\n                        name=\\\"type\\\">\\n                        <option *ngFor=\\\"let type of this.distances\\\">{{type.name}} </option>\\n                    </select>\\n                </div>\\n\\n                <button type=\\\"submit\\\" [disabled]=\\\"!userForm.form.valid\\\" class=\\\"btn btn-success\\\">Search</button>\\n            </form>\\n        </div>\\n    </div>\\n\\n\\n    <div *ngIf=\\\"results\\\">\\n        <div class=\\\"card w-50 mx-auto bg-dark text-white my-5\\\">\\n            <div class=\\\"container\\\">\\n                <div class=\\\"card-body\\\">\\n                    <div class=\\\"table-wrapper-scroll-y my-custom-scrollbar\\\">\\n                        <table class=\\\"table table-bordered table-striped\\\">\\n                            <thead class=\\\"thead-dark\\\">\\n                                <th>Name</th>\\n                                <th>Profile</th>\\n                            </thead>\\n                            <tbody>\\n                                <tr *ngFor=\\\"let result of results\\\">\\n                                    <td>{{result.userFullName}}</td>\\n                                    <td><a routerLink=\\\"/profiles/{{result.id}}\\\">profile</a></td>\\n                                </tr>\\n                            </tbody>\\n                        </table>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","module.exports = \"<div class=\\\"background2\\\">\\n  <div class=\\\"card w-50 mx-auto my-5 bg-dark text-white\\\">\\n    <div class=\\\"container\\\">\\n      <h1>Sign up</h1>\\n      <form (ngSubmit)=\\\"onSubmit()\\\" #userForm=\\\"ngForm\\\">\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"firstName\\\">*First Name</label>\\n          <input [(ngModel)]=\\\"user.firstName\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"firstName\\\" name=\\\"firstName\\\"\\n            placeholder=\\\"First Name\\\" required #firstName=\\\"ngModel\\\">\\n        </div>\\n\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"lastName\\\">*Last Name</label>\\n          <input [(ngModel)]=\\\"user.lastName\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"lastName\\\" name=\\\"lastName\\\"\\n            placeholder=\\\"Last Name\\\" required #lastName=\\\"ngModel\\\">\\n        </div>\\n\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"username\\\">*Username</label>\\n          <input [(ngModel)]=\\\"user.username\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"username\\\" name=\\\"username\\\"\\n            placeholder=\\\"Username\\\" required #username=\\\"ngModel\\\">\\n        </div>\\n\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"password\\\">*Password</label>\\n          <input [(ngModel)]=\\\"user.password\\\" type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" name=\\\"password\\\"\\n            placeholder=\\\"Password\\\" required #password=\\\"ngModel\\\">\\n        </div>\\n\\n        <button type=\\\"submit\\\" [disabled]=\\\"!userForm.form.valid\\\" class=\\\"btn btn-success\\\">Sign up</button>\\n      </form>\\n    </div>\\n  </div>\\n\\n</div>\"","module.exports = \"<select><option *ngFor=\\\"let type of header\\\">{{type.name}} </option> </select>\\n\"","module.exports = \"<div class=\\\"background2\\\">\\n\\n  <div id=\\\"login\\\">\\n    <div class=\\\"card w-25 mx-auto my-5 bg-dark text-white bleh\\\">\\n\\n      <div class=\\\"container\\\">\\n        <h1>Login</h1>\\n        <form (ngSubmit)=\\\"onSubmit()\\\" #userForm=\\\"ngForm\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"name\\\">Username</label>\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"user.username\\\" class=\\\"form-control\\\" id=\\\"name\\\" name=\\\"name\\\"\\n              placeholder=\\\"Username\\\" required #name=\\\"ngModel\\\">\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"password\\\">Password</label>\\n            <input type=\\\"password\\\" [(ngModel)]=\\\"user.password\\\" class=\\\"form-control\\\" id=\\\"password\\\" name=\\\"password\\\"\\n              placeholder=\\\"Password\\\" required #password=\\\"ngModel\\\">\\n\\n          </div>\\n          <button type=\\\"submit\\\" [disabled]=\\\"!userForm.form.valid\\\" class=\\\"btn btn-success\\\">Login</button>\\n        </form>\\n        <div>Don't have an account? <a class=\\\"nav-link\\\" href=\\\"/signup\\\">Sign up.</a> </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"<div class=\\\"background2\\\">\\n\\n  <div *ngIf=\\\"user\\\">\\n    <div *ngIf=\\\"profile\\\">\\n\\n\\n      <div id=\\\"profileHeader\\\" class=\\\"card w-75 mx-auto bg-dark text-white\\\">\\n        <div class=\\\"headerStyle\\\">\\n          <h1> <b><em>{{user.firstName}} {{user.lastName}} </em></b> <span>({{profile.type}}) </span> </h1>\\n        </div>\\n      </div>\\n\\n      <div id=\\\"profilePage\\\" class=\\\"card w-75 mx-auto bg-secondary text-white\\\">\\n        <div class=\\\"container w-100 my-10\\\">\\n\\n\\n          <div *ngIf=\\\"profile.description\\\" class=\\\"form-group my-5\\\">\\n            <div id=\\\"name\\\" name=\\\"name\\\" class=\\\"cardHeader mx-auto bg-light text-black profileComponents\\\">\\n              <div class=\\\"card-title w-100 bg-dark headerStyle\\\">Description</div>\\n              <h6 id=\\\"innerText\\\"> {{profile.description}} </h6>\\n            </div>\\n          </div>\\n\\n\\n          <div *ngIf=\\\"profile.links\\\" class=\\\"form-group my-5\\\">\\n            <div id=\\\"name\\\" name=\\\"name\\\" class=\\\"cardHeader mx-auto bg-light text-black profileComponents\\\">\\n              <div class=\\\"card-title w-100 bg-dark headerStyle\\\">Links</div>\\n              <h6 id=\\\"innerText\\\"> {{profile.links}} </h6>\\n            </div>\\n\\n          </div><a *ngIf=\\\"show\\\" class=\\\"btn btn-success\\\" href=\\\"/editProfile\\\">Edit Profile</a>\\n        </div>\\n\\n      </div>\\n\\n    </div>\\n  </div>\\n</div>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserLoginComponent } from './user-login/user-login.component';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { UserProfileComponent } from './user-profile/user-profile.component';\nimport { HomescreenComponent } from './homescreen/homescreen.component';\nimport { EditProfileComponent } from './edit-profile/edit-profile.component';\nimport { SearcherComponent } from './searcher/searcher.component';\nimport { SearchResultsComponent } from './search-results/search-results.component';\n\n\nconst routes: Routes = [\n  { path: 'login', component: UserLoginComponent},\n  { path: 'signup', component: SignUpComponent},\n  { path: 'profiles/:id', component: UserProfileComponent},\n  { path: 'home', component: HomescreenComponent, runGuardsAndResolvers: \"always\"},\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\n  { path: 'editProfile', component: EditProfileComponent},\n  { path: 'search', component: SearcherComponent},\n  { path: 'searchResults', component: SearchResultsComponent}\n\n\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {onSameUrlNavigation: \"reload\"})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"#SearchBar{\\n    \\n\\n}\\n\\n#greeting {\\n    position: relative;\\n  right: 0px;\\n  width: 200px;\\n  padding: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztBQUdBOztBQUVBO0lBQ0ksa0JBQWtCO0VBQ3BCLFVBQVU7RUFDVixZQUFZO0VBQ1osYUFBYTtBQUNmIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjU2VhcmNoQmFye1xuICAgIFxuXG59XG5cbiNncmVldGluZyB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICByaWdodDogMHB4O1xuICB3aWR0aDogMjAwcHg7XG4gIHBhZGRpbmc6IDEwcHg7XG59Il19 */\"","import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from './models/user';\nimport { UserService } from './services/user-service.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'undergrowth';\n  currentUser: User;\n\n\n  constructor(private service: UserService){}\n\n  ngOnInit() {\n    this.currentUser = JSON.parse(localStorage.getItem('currentUser'));\n  }\n\n  logOut(){\n    this.currentUser = null;\n    this.service.userLogout();\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\n\n\nimport { AppComponent } from './app.component';\nimport { UserProfileComponent } from './user-profile/user-profile.component';\nimport { UserLoginComponent } from './user-login/user-login.component';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { UserService } from './services/user-service.service';\nimport { HomescreenComponent } from './homescreen/homescreen.component';\nimport { EditProfileComponent } from './edit-profile/edit-profile.component';\nimport { TypeSelectorComponent } from './type-selector/type-selector.component';\nimport { SearcherComponent } from './searcher/searcher.component';\nimport { SearchResultsComponent } from './search-results/search-results.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserProfileComponent,\n    UserLoginComponent,\n    SignUpComponent,\n    HomescreenComponent,\n    EditProfileComponent,\n    TypeSelectorComponent,\n    SearcherComponent,\n    SearchResultsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n  ],\n  providers: [UserService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VkaXQtcHJvZmlsZS9lZGl0LXByb2ZpbGUuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserProfile } from '../models/user-profile';\nimport { ProfileService } from '../services/profile.service';\nimport { User } from '../models/user';\nimport { TypeSelectorComponent } from '../type-selector/type-selector.component';\n\n@Component({\n  selector: 'app-edit-profile',\n  templateUrl: './edit-profile.component.html',\n  styleUrls: ['./edit-profile.component.css']\n})\nexport class EditProfileComponent implements OnInit {\n\n  public profile: UserProfile = new UserProfile();\n  private currentUser: User;\n  private typeSelector: TypeSelectorComponent = new TypeSelectorComponent();\n  private headers = this.typeSelector.header;\n\n  constructor(private service: ProfileService,\n                  private router: Router) { }\n\n  ngOnInit() {\n    this.currentUser = JSON.parse(localStorage.getItem('currentUser'));\n    console.log(this.headers);\n    //this.service.getProfile().subscribe(profile => this.profile = profile)\n\n    if (this.currentUser){\n      this.service.getProfile().subscribe(profile => this.profile = profile);\n      //this.profile = this.service.getProfile;\n    }\n  }\n\n  onSubmit(){\n      // this.profile.id = null;\n      console.log(this.profile);\n      this.service.editProfile(this.profile, this.currentUser.id);\n  }\n\n}\n","module.exports = \".hometext {\\n    color: whitesmoke;\\n    margin-top: 50px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZXNjcmVlbi9ob21lc2NyZWVuLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxpQkFBaUI7SUFDakIsZ0JBQWdCO0FBQ3BCIiwiZmlsZSI6InNyYy9hcHAvaG9tZXNjcmVlbi9ob21lc2NyZWVuLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaG9tZXRleHQge1xuICAgIGNvbG9yOiB3aGl0ZXNtb2tlO1xuICAgIG1hcmdpbi10b3A6IDUwcHg7XG59Il19 */\"","import { Component, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-homescreen',\n  templateUrl: './homescreen.component.html',\n  styleUrls: ['./homescreen.component.css']\n})\nexport class HomescreenComponent implements OnInit, OnChanges {\n\n\n  welcomeMessage = 'Welcome to undergrowth, a project currently being developed by Connor Jones.';\n  missionStatement = 'The mission of undergrowth is to promote the growth of local art and music scenes, and provide a place for artists and musicians to gain exposure and connect with one another.'\n\n\n  constructor(private router: Router) {}\n\n  ngOnInit() {\n  }\n\n  ngOnChanges(changes: SimpleChanges){\n  }\n\n}\n","export class SearchCriteria {\n    distance: string;\n    profileType: string;\n    zipcode: string;\n}\n","import { User } from './user';\n\nexport class UserProfile {\n    id: number;\n    description: string;\n    zipcode: string;\n    links: string;\n    email: string;\n    type: string;\n    user: User;\n    constructor(){}\n\n\n\n\n}\n","import { UserProfile } from './user-profile';\n\nexport class User {\n    id: number;\n    username: string;\n    password: string;\n    firstName: string;\n    lastName: string;\n    userProfile: UserProfile;\n    type: string;\n    userFullName: string;\n\n    constructor(){}\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlYXJjaC1yZXN1bHRzL3NlYXJjaC1yZXN1bHRzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { SearcherComponent } from '../searcher/searcher.component';\nimport { UserProfile } from '../models/user-profile';\n\n@Component({\n  selector: 'app-search-results',\n  templateUrl: './search-results.component.html',\n  styleUrls: ['./search-results.component.css']\n})\nexport class SearchResultsComponent implements OnInit {\n\n\n  private results : UserProfile[];\n\n  constructor(private searcher: SearcherComponent) { }\n\n  ngOnInit() {\n    this.results = this.searcher.results;\n    console.log(this.results);\n  }\n\n}\n","module.exports = \".my-custom-scrollbar {\\n    position: relative;\\n    height: 190px;\\n    overflow: auto;\\n}\\n.table-wrapper-scroll-y {\\n    display: block;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2VhcmNoZXIvc2VhcmNoZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGtCQUFrQjtJQUNsQixhQUFhO0lBQ2IsY0FBYztBQUNsQjtBQUNBO0lBQ0ksY0FBYztBQUNsQiIsImZpbGUiOiJzcmMvYXBwL3NlYXJjaGVyL3NlYXJjaGVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubXktY3VzdG9tLXNjcm9sbGJhciB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGhlaWdodDogMTkwcHg7XG4gICAgb3ZlcmZsb3c6IGF1dG87XG59XG4udGFibGUtd3JhcHBlci1zY3JvbGwteSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG59XG4iXX0= */\"","import { Component, OnInit, Injectable } from '@angular/core';\nimport { TypeSelectorComponent } from '../type-selector/type-selector.component';\nimport { SearchCriteria } from '../models/search-criteria';\nimport { UserProfile } from '../models/user-profile';\nimport { ProfileService } from '../services/profile.service';\nimport { User } from '../models/user';\nimport { UserPages } from '../models/user-pages';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-searcher',\n  templateUrl: './searcher.component.html',\n  styleUrls: ['./searcher.component.css']\n})\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class SearcherComponent implements OnInit {\n\n\n  private typeSelector: TypeSelectorComponent = new TypeSelectorComponent();\n  private headers = this.typeSelector.header;\n  private distances = [{ name: 'Local' }, { name: 'All'}]\n  private searchCriteria: SearchCriteria = new SearchCriteria();\n  public results: UserProfile[];\n  private userResults: User[];\n  private currentUserProfile: UserProfile;\n  \n  private userPages: UserPages[];\n\n  constructor(private profileService: ProfileService, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  onSubmit(){\n\n    // let currentUser = JSON.parse(localStorage.getItem('currentUser'));\n    // this.searchCriteria.zipcode = currentUser.userProfile.zipcode;\n    console.log(this.searchCriteria);\n\n    let currentUser = JSON.parse(localStorage.getItem('currentUser'));\n    this.profileService.getProfile().subscribe(profile => this.currentUserProfile = profile);\n    if (this.searchCriteria.distance === 'Local'){\n      this.profileService.findLocalProfiles(this.searchCriteria.profileType, this.currentUserProfile)\n      .subscribe(profiles => this.results = profiles);\n    } else {\n      this.profileService.findAllProfiles(this.searchCriteria.profileType)\n      .subscribe(profiles => {this.results = profiles\n        //console.log(this.results);\n      });\n\n      // this.profileService.findAllUserPages()\n      // .subscribe(pages => this.userPages = pages);\n      // console.log(this.results);\n    }\n    console.log(this.results);\n    //this.router.navigate(['/searchResults']);\n  }\n\n  \n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n  private url: string;\n\n  constructor(private http: HttpClient) { \n    this.url = environment.baseUrl + '/users';\n  }\n\n  login(user: User){\n    return this.http.put<User>(this.url + '/login', user);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { User } from '../models/user';\nimport { Router } from '@angular/router';\nimport { environment } from 'src/environments/environment';\nimport { UserProfile } from '../models/user-profile';\nimport { HttpClient } from '@angular/common/http';\nimport { UserPages } from '../models/user-pages';\nimport { UserService } from './user-service.service';\nimport { LoginService } from './login.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfileService {\n\n  private url: string;\n  public currentUser: User;\n  private userProfile: UserProfile;\n  \n\n  constructor(private http: HttpClient, private router: Router, private userService: UserService,\n    private loginService: LoginService) { \n    this.url = environment.baseUrl + '/profiles';\n    this.currentUser = JSON.parse(localStorage.getItem('currentUser'));\n    this.userProfile = this.currentUser.userProfile;\n  }\n\n\n  getProfile(){\n    return this.http.get<UserProfile>(this.url + '/' + this.currentUser.id);\n  }\n\n\n\n\n  editProfile(userProfile: UserProfile, id: number){\n    console.log(this.currentUser);\n    this.http.put<UserProfile>(this.url + '/' + id, userProfile).subscribe();\n    // this.loginService.login(this.currentUser);\n  }\n\n  findLocalProfiles(type: String, profile: UserProfile){\n    // this.getProfile().subscribe(profile => this.currentUse)\n    console.log(profile);\n    console.log(this.userService.currentUserProfile);\n    console.log(this.userProfile);\n    // this.getProfile().subscribe(profile => this.userProfile = profile);\n    return this.http.put<UserProfile[]>(this.url + '/local/' + type, this.userProfile);\n\n  }\n\n  findAllProfiles(type: String){\n    return this.http.get<UserProfile[]>(this.url + '/all/' + type);\n  }\n\n\n  // findAllUserPages(){\n  //   return this.http.get<UserPages[]>(environment.baseUrl + '/userPages?page=1');\n  // }\n\n\n  \n}\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from '../models/user';\nimport { Observable } from 'rxjs';\nimport { LoginService } from './login.service';\nimport { Router } from '@angular/router';\nimport { UserLoginComponent } from '../user-login/user-login.component';\nimport { UserProfile } from '../models/user-profile';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private url: string;\n  public currentUser: User;\n  public currentUserProfile: UserProfile;\n  private loggedIn: boolean = false;\n  \n\n  constructor(private http: HttpClient, private loginService: LoginService, private router: Router) { \n    this.url = environment.baseUrl + '/users';\n  }\n\n  addUser(user: User) {\n    this.http.post(this.url, user).subscribe(\n      user => { this.userLogin(user as User);\n          // this.router.navigate(['/editProfile']);\n      }\n\n    );\n    // this.router.navigate(['/editProfile']);\n\n  }\n\n\n  getUserById(id: number): Observable<User>{\n    return this.http.get<User>(this.url + `/${id}`);\n  }\n\n  userLogin(user: User){\n    localStorage.removeItem('currentUser');\n    this.currentUser = null;\n    this.loginService.login(user).subscribe(user => \n      {this.currentUser = user;\n        this.currentUser.password = null;\n        this.currentUserProfile = this.currentUser.userProfile;\n        console.log(this.currentUserProfile);\n        localStorage.setItem('currentUser', JSON.stringify(this.currentUser));\n        this.loggedIn = true;\n        location.reload();\n      });\n      \n      this.router.navigate(['/home']);\n\n\n  }\n\n  userLogout(){\n    localStorage.removeItem('currentUser');\n    this.currentUser = null;\n    location.reload();\n  }\n\n  isLoggedIn(){\n    return this.loggedIn;\n  }\n\n\n\n\n\n\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NpZ24tdXAvc2lnbi11cC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../services/user-service.service';\nimport { User } from '../models/user';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})\nexport class SignUpComponent implements OnInit {\n\n  public user: User = new User();\n\n  constructor(private service: UserService,\n              private http: HttpClient,\n              private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  onSubmit(){\n    this.service.addUser(this.user);\n    // this.service.userLogin(this.user);\n    // this.router.navigate(['editProfile']);\n\n    // this.router.navigate(['/login']);\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3R5cGUtc2VsZWN0b3IvdHlwZS1zZWxlY3Rvci5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-type-selector',\n  templateUrl: './type-selector.component.html',\n  styleUrls: ['./type-selector.component.css']\n})\nexport class TypeSelectorComponent implements OnInit {\n\n  public header = [{ name: 'Artist' }, { name: 'Musician'}, { name: 'Photographer' },\n  { name: 'Band' }, { name: 'Appreciator'}, { name: 'Other' }]; \n\n  public types = [  \n      {Name:'Artist', id: 1}, \n      {Name:'Musician', id: 2}, \n      {Name:'Photographer', id: 3}, \n      {Name:'Band', id: 4}, \n      {Name:'Appreciator', id: 5}, \n      {Name:'Other', id: 6}, \n  ];\n\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".container {\\n    margin-top: 0;\\n    z-index: 1;\\n  }\\n\\n  .caption {\\n    z-index: -1;\\n    color: aliceblue;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlci1sb2dpbi91c2VyLWxvZ2luLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2IsVUFBVTtFQUNaOztFQUVBO0lBQ0UsV0FBVztJQUNYLGdCQUFnQjtFQUNsQiIsImZpbGUiOiJzcmMvYXBwL3VzZXItbG9naW4vdXNlci1sb2dpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XG4gICAgbWFyZ2luLXRvcDogMDtcbiAgICB6LWluZGV4OiAxO1xuICB9XG5cbiAgLmNhcHRpb24ge1xuICAgIHotaW5kZXg6IC0xO1xuICAgIGNvbG9yOiBhbGljZWJsdWU7XG4gIH1cbiAgIl19 */\"","import { Component, OnInit, OnChanges } from '@angular/core';\nimport { User } from '../models/user';\nimport { UserService } from '../services/user-service.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-user-login',\n  templateUrl: './user-login.component.html',\n  styleUrls: ['./user-login.component.css']\n})\nexport class UserLoginComponent implements OnInit, OnChanges {\n\n  public user: User = new User();\n  public currentUser: User;\n\n  constructor(private service: UserService,\n    private http: HttpClient,\n    private router: Router\n    ) {}\n\n  ngOnInit() {\n    this.currentUser = JSON.parse(localStorage.getItem('currentUser'));\n  }\n\n  ngOnChanges(){\n    location.reload();\n  }\n\n  onSubmit() {\n    this.service.userLogin(this.user);\n    this.currentUser = JSON.parse(localStorage.getItem('currentUser'));\n  }\n\n  logout(){\n    this.service.userLogout();\n  }\n\n\n}\n","module.exports = \"#innerText{\\n    color: black;\\n    padding-left: 10px;\\n    padding: 10px;\\n}\\n\\n#profilePage{\\n    height: 500px;\\n    /* background-color: lightseagreen; */\\n}\\n\\n.profileComponents{\\n    height: 100px;\\n}\\n\\n.headerStyle{\\n    color: lightseagreen;\\n    text-decoration: underline;\\n    -webkit-text-decoration-color: rgb(191, 207, 191);\\n            text-decoration-color: rgb(191, 207, 191);\\n    margin: auto;\\n    padding: 5px;\\n    font: italic bold 12px/30px;\\n}\\n\\n.cardHeader{\\n\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlci1wcm9maWxlL3VzZXItcHJvZmlsZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixhQUFhO0FBQ2pCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHFDQUFxQztBQUN6Qzs7QUFFQTtJQUNJLGFBQWE7QUFDakI7O0FBRUE7SUFDSSxvQkFBb0I7SUFDcEIsMEJBQTBCO0lBQzFCLGlEQUF5QztZQUF6Qyx5Q0FBeUM7SUFDekMsWUFBWTtJQUNaLFlBQVk7SUFDWiwyQkFBMkI7QUFDL0I7O0FBRUE7O0FBRUEiLCJmaWxlIjoic3JjL2FwcC91c2VyLXByb2ZpbGUvdXNlci1wcm9maWxlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjaW5uZXJUZXh0e1xuICAgIGNvbG9yOiBibGFjaztcbiAgICBwYWRkaW5nLWxlZnQ6IDEwcHg7XG4gICAgcGFkZGluZzogMTBweDtcbn1cblxuI3Byb2ZpbGVQYWdle1xuICAgIGhlaWdodDogNTAwcHg7XG4gICAgLyogYmFja2dyb3VuZC1jb2xvcjogbGlnaHRzZWFncmVlbjsgKi9cbn1cblxuLnByb2ZpbGVDb21wb25lbnRze1xuICAgIGhlaWdodDogMTAwcHg7XG59XG5cbi5oZWFkZXJTdHlsZXtcbiAgICBjb2xvcjogbGlnaHRzZWFncmVlbjtcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgICB0ZXh0LWRlY29yYXRpb24tY29sb3I6IHJnYigxOTEsIDIwNywgMTkxKTtcbiAgICBtYXJnaW46IGF1dG87XG4gICAgcGFkZGluZzogNXB4O1xuICAgIGZvbnQ6IGl0YWxpYyBib2xkIDEycHgvMzBweDtcbn1cblxuLmNhcmRIZWFkZXJ7XG5cbn0iXX0= */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { UserProfile } from '../models/user-profile';\nimport { UserService } from '../services/user-service.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { User } from '../models/user';\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.css']\n})\nexport class UserProfileComponent implements OnInit {\n\n  private user: User;\n  private currentUser: User;\n  @Input() profile: UserProfile;\n  private show: boolean;\n\n  constructor(private userService: UserService,\n              private route: ActivatedRoute) { \n                this.profile = new UserProfile();\n                this.show = false;\n              }\n\n  ngOnInit(): void {\n    this.currentUser = JSON.parse(localStorage.getItem('currentUser'));\n    this.getProfile();\n  }\n\n  getProfile(){\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.userService.getUserById(id).subscribe(currentUser => {\n    this.user = currentUser;\n    this.profile = this.user.userProfile;\n\n    if (this.currentUser.id === this.user.id){\n      this.show = true;\n    }\n\n    });\n\n\n\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl: 'http://localhost:8080'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}